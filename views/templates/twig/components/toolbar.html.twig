{% if showToolbar %}
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <style>
        .after-toolbar {
            margin-top: 72px; /* 56px (toolbar) + 16px (spazio extra se serve) */
        }
        .dropdown-submenu {
            position: relative;
        }
        .dropdown-submenu > .dropdown-menu {
            top: 0;
            left: 100%;
            margin-top: -6px;
            margin-left: 0;
            border-radius: 0.5rem;
        }
        .dropdown-submenu > a:after {
            content: "\25B6";
            display: inline-block;
            vertical-align: middle;
            margin-left: 0.5em;
            font-size: 0.9em;
            margin-top: 0;
            position: relative;
            top: -4px;
            right: -40%;
        }
        .navbar .material-icons {
            font-size: 1.3em;
            vertical-align: middle;
        }
        .navbar .dropdown-menu {
            min-width: 220px;
        }
        .dropdown-menu .dropdown-item:hover,
        .dropdown-menu .dropdown-item:focus {
            background: #e3f0fa;
            color: #1769aa;
            font-weight: 500;
        }
        .dropdown-menu .dropdown-item.active, .dropdown-menu .dropdown-item:active {
            background: #1769aa;
            color: #fff;
        }
        .dropdown-menu .dropdown-item {
            transition: background 0.15s, color 0.15s;
        }

        @media(max-width: 991.98px) {
            .navbar .dropdown-menu {
                position: static !important;
            }
        }
        .bg-color-info {
            background-color: var(--info) !important;
            color: #fcfcfc !important;
        }

        .bg-color-info .material-icons {
            color: #fcfcfc !important;
        }
    </style>

    <nav id="toolbar-menu" class="navbar navbar-expand-lg navbar-light bg-white shadow-sm rounded mb-3 sticky-toolbar" style="padding: 0.5rem 1.5rem;">
        <a class="navbar-brand d-flex align-items-center bg-color-info p-2" href="#">
            <span class="material-icons mr-2">{{ icon }}</span>
            <span class="fw-bold">{{ title }}</span>
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#toolbarNav" aria-controls="toolbarNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="toolbarNav">
            <ul id="mainMenu" class="navbar-nav me-auto mb-2 mb-lg-0"></ul>
        </div>
        {% if showSearch %}
        <div class="d-flex ms-auto" role="search" style="max-width: 340px;">
            <input class="form-control me-2" type="search" placeholder="Cerca..." aria-label="Cerca" id="toolbar-search-input">
            <button class="btn btn-outline-primary d-flex align-items-center" id="toolbar-search-btn" type="button">
                <span class="material-icons">search</span>
            </button>
        </div>
        {% endif %}
    </nav>

    {# prettier-ignore-start #}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="{{ asset('../modules/mpbrtapishipment/views/assets/js/menu/rendermenu.js') }}"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const toolbarMenu = document.getElementById('toolbar-menu');
            if (toolbarMenu) {
                const header = document.querySelector('.header-toolbar');
                if (header) {
                    header.appendChild(toolbarMenu);
                }
            }
            // menu Ã¨ passato da Twig come stringa JSON, quindi va decodificato
            let menuData = [];
            try {
                menuData = JSON.parse('{{ menu|e('js') }}');
            } catch (e) {
                console.error('Errore parsing menu JSON', e);
            }
            const menuUl = document.getElementById('mainMenu');
            if (menuUl && Array.isArray(menuData)) {
                renderMenu(menuData, menuUl);
            }

            // Dropdown submenu support
            document.querySelectorAll('.dropdown-submenu > a').forEach(function(element) {
                element.addEventListener('mouseenter', function(e) {
                    let submenu = element.nextElementSibling;
                    if(submenu) submenu.classList.add('show');
                });
                element.parentElement.addEventListener('mouseleave', function(e) {
                    let submenu = element.nextElementSibling;
                    if(submenu) submenu.classList.remove('show');
                });
            });
        });
    </script>
    {# prettier-ignore-end #}
{% endif %}

